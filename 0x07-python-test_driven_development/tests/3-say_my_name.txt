#3-say_my_name.txt

===============================
This is the say_my_name doctest
===============================

This modules defines a function ``say_my_name(first_name, last_name="")``.
``say_my_name(...)`` prints "My name is <first_name> <last_name>".

>>> say_my_name = __import__('3-say_my_name').say_my_name

::

	>>> say_my_name("John", "Smith")
	My name is John Smith

	>>> say_my_name("Abel", "Ada")
	My name is Abel Ada

The 'last_name' parameter is optional

::
	>>> say_my_name("Brennan")
	My name is Brennan 

=======
ERRORS
=======
The program raises an error if either parameters are not strings

::

   	>>> say_my_name({"LeBron": 6, "James": 23}, 7.7)
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name("LeBron", ["Cavs", "Lakers", "Heat"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

	>>> say_my_name("John", 1)
	Traceback (most recent call last):
	TypeError: last_name must be a string

	>>> say_my_name(1, "1")
	Traceback (most recent call last):
	TypeError: first_name must be a string

When the module is empty it raises a TypeError

::

	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'
